<nav class="navbar has-background-info mb-5" role="navigation" aria-label="main navigation">

    <div class="navbar-brand p-3">
      
      <a href="#"><i class="fab fa-artstation fa-3x has-text-white ml-6"></i></a> 
      
      <a role="button" class="navbar-burger" aria-label="menu" aria-expanded="false" data-target="navbarBasicExample">
        <span aria-hidden="true"></span>
        <span aria-hidden="true"></span>
        <span aria-hidden="true"></span>
      </a>
    </div>

    <div id="navbarBasicExample" class="navbar-menu">
    
      <div class="navbar-end">
        <div class="navbar-item">
          
          <a><p class="has-text-white is-size-4 mr-4"><%= @current_user.name %></p></a>
          
          <a class="image is-42x42 mr-6">
            <a href="/users/<%= @current_user.id %>/edit">
              <figure class="is-rounded"><%= image_tag(@current_user.profile_picture) %> </figure>
            </a>
          </a>

          <%= link_to "Log out", logout_path, method: :delete, class: 'button has-text-info has-text-bold is-white' %>
       
        </div>
      </div>
    </div>
</nav>
<div class='container' id="posts">

    <%= form_with model: @post, remote: true, id: 'post-form' do |form| %>
      <div class="field has-addons mb-4">
        <div class="control is-expanded"> 
          <%= form.text_field :message, placeholder: "What's on Your Mind?", class: "input is-info is-rounded has-icons-right control", id: 'form-input' %>
          <p id="form-warning" class="help is-danger"></p>
        </div>
        <div class="control">
          <button class="button is-info is-rounded has-text-weight-bold">
            Post
          </button>
        </div>
      </div> 
    <% end %> 

    <div id="posts-top"></div>
    <% @posts.each do |post| %>

      <% @user = User.find(post.user_id) %>
      <div id="post-<%=post.id%>" class="card mb-5">


        <div class="card-content">

          <div class="media">
            <div class="media-left">
              <figure class="image is-64x64">
                <%= image_tag(@user.profile_picture, class: "is-rounded") %>
              </figure>
            </div>
            <div class="media-content">
              <p class="title is-4"><%= @user.name %></p>
            </div>
          </div>

          <div class="content post-message">
            <p><%= link_to post.message, post_path(post), class: "has-text-dark" %></p>
            <time class="has-text-grey"><%=time_ago_in_words(post.updated_at)%> ago</time>
          </div>

      
            <footer class="card-footer">
              <%# Like/unlike button%>
            <%like = current_user.likes.find_by(post: post)%>
            <% if like.nil? %>
              <%= link_to '<i class="far fa-thumbs-up fa-lg"></i>'.html_safe, post_likes_path(post), remote:true, method: :post, class: "card-footer-item like-button" %> <%#Like%>
            <% else %>
              <%= link_to '<i class="fas fa-thumbs-up fa-lg"></i>'.html_safe, post_like_path(post, like), method: :delete, class: "card-footer-item like-button" %> <%#Unlike%>
            <% end %>
            <% if current_user == @user %>
              <a href="#" class="card-footer-item edit-post-button" id="edit-post-<%=post.id%>">Edit</a>

              <%= link_to "Delete", post_path(post), remote: true, class: "card-footer-item delete-post-button",
                              method: :delete,
                              data: { confirm: "Are you sure?" } %>
          <% end %>
            </footer>

          <div class='likes'>
          <%# like count and display last likers %>
            <%= likes_count(post)%>
            <%# display likers%>
            <%= liked_by_users(post) %>
          </div>

          <div class="comment-box p-2">

            <% post.comments.each do |comment| %>

                <div class="card box has-background-white-ter pb-1" id="comment-<%=comment.id%>">

                  <div class="card-content pb-1">

                    <div class="media">

                      <div class="media-left">
                        <figure class="image is-32x32">
                          <%= image_tag(comment.user.profile_picture, class: "is-rounded") %>
                        </figure>
                      </div>

                      <div class="media-content">
                        <% @commenter = User.find(comment.user_id) %>
                        <p class="title is-6"><%= @commenter.name %></p>
                      </div>
                    </div>

                    <div class="content comment-message">
                      <p class="has-text-dark"><%= comment.message %></p>
                      <time class="has-text-grey"><%=time_ago_in_words(comment.updated_at)%> ago</time>
                    </div>

                    <footer class="card-footer">
                      <% if current_user == @commenter %>
                        <% if editable?(comment) %>
                          <%= link_to '<i class="fas fa-edit"></i>'.html_safe, post_path(post) + "/comments/#{comment.id}/edit",
                          class: "card-footer-item editbutton" %>
                        <% end %>
                        <%= link_to '<i class="fas fa-trash-alt" aria-hidden="true"></i>'.html_safe, post_path(post) + "/comments/#{comment.id}",
                        class: "card-footer-item deleter",
                        remote: true,
                        method: :delete
                        %>
                      <% end %>
                    </footer>

                  </div>

                </div>

            <% end %>

          </div>      

          <footer id="post-footer-<%=post.id%>" class="is-fixed-bottom mt-5">
          
            <%= form_with model: [ post, post.comments.build ], remote: true, class: "reply-form" do |form| %>
              <div class="field has-addons mb-4">
                <div class="control is-expanded"> 
                  <%= form.text_field :message, placeholder: "Comment", class: "input is-info is-rounded has-icons-right control" %>
                  <p class="help is-danger reply-warning"></p>
                </div>
                <div class="control">
                  <button class="button is-info is-rounded has-text-weight-bold">
                    Reply
                  </button>
                </div>
              </div> 
              
            <% end %>
          </footer>

        </div>

      </div>



    <%# Edit Post Modal %>
      <div class="modal" id="edit-post-<%=post.id%>-modal">
        <div class="modal-background"></div>
        <div class="modal-content">
          <!-- Any other Bulma elements you want -->
            <%= form_for post, :remote => true do |form| %>
              <div class="field">
                <div class="control">
                  <%= form.text_field :message, class: 'input is-success is-rounded', value: post.message %>
                </div>
              </div>

              <div class="field has-text-centered">
                <div class="control">
                  <%= form.submit "Edit Post", class: "button is-success is-rounded" %>
                </div>
              </div>                
            <% end %>
        </div>
        <button class="modal-close is-large" aria-label="close"></button>
      </div>
  
    <% end %>
    <div id="post-end"></div>


    <%#Comment Template for JS do not delete %>
    <div class="card box has-background-white-ter pb-1 is-hidden" id="comment-template">
      <div class="card-content pb-1">
        <div class="media">
          <div class="media-left">
            <figure class="image is-32x32">
            </figure>
          </div>

          <div class="media-content">
            <p class="title is-6"></p>
          </div>
        </div>

        <div class="content comment-message">
          <p class="has-text-dark"></p>
          <time class="has-text-grey"></time>
        </div>

        <footer class="card-footer">
        </footer>
      </div>
    </div>

<%#Post Template for JS do not Delete%>

        <div id="post-template" class="card mb-5 is-hidden">
        <div class="card-content">
          <div class="media">
            <div class="media-left">
              <figure class="image is-64x64">
              </figure>
            </div>
            <div class="media-content">
              <p class="title is-4"></p>
            </div>
          </div>
          <div class="content post-message">
            <p></p>
            <time class="has-text-grey"></time>
          </div>

            <footer class="card-footer">
              <%= link_to '<i class="far fa-thumbs-up fa-lg"></i>'.html_safe, "", remote:true, method: :post, class: "card-footer-item like-button" %>
              <a href="#" class="card-footer-item edit-post-button">Edit</a>
              <%= link_to "Delete", "", remote: true, class: "card-footer-item delete-post-button",
                              method: :delete,
                              data: { confirm: "Are you sure?" } %>
            </footer>

          <div class='likes'>
          </div>

          <div class="comment-box p-2">
          </div>      

          <footer id="post-footer" class="is-fixed-bottom mt-5">
          </footer>
        </div>
      </div>


</div>


<script>
  // Show form warning if empty post is submitted
  const form = document.getElementById('post-form')
  form.addEventListener('submit', e => {
    if(!e.target[2].value) {
       e.preventDefault();
      document.getElementById('form-warning').innerText = 'Post cannot be empty'
    }
  })
  
  // Show form warning if empty comment is submitted
  const replyForms = document.querySelectorAll('.reply-form')
  for (const form of replyForms) {
    form.addEventListener('submit', e => {
       if (!e.target[2].value) {
         e.preventDefault();
         e.target.querySelector('p').innerText = "Reply cannot be empty."
       }
    })
  }
  
  // Remove form warning(s) with click on body
  document.body.onclick = () => {
   
    const replyWarnings = document.querySelectorAll('.reply-warning')
     for (const reply of replyWarnings) {
       reply.innerText = ''
     }

     document.getElementById('form-warning').innerText = ''
  }

  // convert # and @ into link-like text in posts
  const postMessages = document.querySelectorAll('.post-message')
  for (const post of postMessages) {
    post.innerHTML = post.innerHTML.replace(/[#@]([^ ]+)/g, hashtag => `<span class='has-text-link'>${hashtag}</span>`)
  }

   // convert # and @ into link-like text in comments
  const commentMessages = document.querySelectorAll('.comment-message')
  for (const comment of commentMessages) {
    comment.innerHTML = comment.innerHTML.replace(/[#@]([^ ]+)/g, hashtag => `<span class='has-text-link'>${hashtag}</span>`)
  }

  // Open Edit Post Modal
  const editPostButtons = document.querySelectorAll('.edit-post-button')
  for (const ePButton of editPostButtons) {
    ePButton.addEventListener('click', (e) => {
      document.getElementById(`${e.target.id}-modal`).classList.add('is-active')
    
    })
  }

  // Close Edit Post Modal
  const modalElements = document.querySelectorAll('.modal-background, .modal-close, .modal-card-head .delete, .modal-card-foot .button')
  
  for (const modalElement of modalElements) {
    modalElement.addEventListener('click', () => {
      console.log('modal clicked up')
      
      const modals = document.querySelectorAll('.modal')
      for (const modal of modals) {
        modal.classList.remove("is-active")
      }
    })
  }

</script>


